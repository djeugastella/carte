{"ast":null,"code":"var _jsxFileName = \"/home/kenneth/Bureau/carte-projet/src/components/CityList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CityList({\n  cities,\n  selectedCity\n}) {\n  _s();\n  const [hoveredCity, setHoveredCity] = useState(null);\n  const calculateDistance = city => {\n    // Implémentez ici la formule de calcul de la distance entre la ville et le point cliqué\n\n    // Coordonnées du point cliqué\n    const clickedX = city.x;\n    ; // Remplacez ... par la coordonnée x du point cliqué\n    const clickedY = city.y; // Remplacez ... par la coordonnée y du point cliqué\n\n    // Coordonnées de la ville\n    const cityX = city.x;\n    const cityY = city.y;\n\n    // Calcul de la distance euclidienne\n    const distance = Math.sqrt(Math.pow(clickedX - cityX, 2) + Math.pow(clickedY - cityY, 2));\n    return distance;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Liste des villes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: cities.map(city => /*#__PURE__*/_jsxDEV(\"li\", {\n        onMouseEnter: () => setHoveredCity(city),\n        onMouseLeave: () => setHoveredCity(null),\n        children: [city.name, \" - \", calculateDistance(city), \" km\"]\n      }, city.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), hoveredCity && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"D\\xE9tails de la ville survol\\xE9e :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Nom : \", hoveredCity.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Distance : \", hoveredCity.distance]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"population : \", hoveredCity.population]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"region: \", hoveredCity.region]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), selectedCity && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"D\\xE9tails de la ville s\\xE9lectionn\\xE9e :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Nom : \", selectedCity.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(CityList, \"J6cWgCd0mYOsB13sdkGHgRrftcw=\");\n_c = CityList;\nexport default CityList;\n\n/*\nimport React from \"react\";\nimport CityDetails from \"./CityDetails\";\n\nfunction CityList({ cities, selectedCity }) {\n\n  return (\n\n    <div style={{ display: \"flex\" }}>\n\n      <div style={{ flex: \"1\" }}>\n\n        <h2>Liste des villes</h2>\n\n        <ul>\n\n          {cities.map(city => (\n\n            <li\n\n              key={city.id}\n\n              style={{\n\n                cursor: \"pointer\",\n\n                fontWeight: selectedCity && selectedCity.id === city.id ? \"bold\" : \"normal\"\n\n              }}\n\n              onClick={() => selectedCity(city)}\n\n            >\n\n              {city.name}\n\n            </li>\n\n          ))}\n\n        </ul>\n\n      </div>\n\n      <div style={{ flex: \"2\", position: \"relative\" }}>\n\n        <h2>Carte des villes</h2>\n\n        <div style={{ position: \"absolute\", left: \"0\", top: \"0\" }}>\n\n          {cities.map(city => (\n\n            <div\n\n              key={city.id}\n\n              style={{\n\n                position: \"absolute\",\n\n                left: city.x,\n\n                top: city.y,\n\n                width: \"10px\",\n\n                height: \"10px\",\n\n                backgroundColor: \"red\",\n\n                borderRadius: \"50%\"\n\n              }}\n\n            />\n\n          ))}\n\n        </div>\n\n      </div>\n\n    </div>\n\n  );\n\n}\n\nexport default CityList;*/\n\n/*function CityList({ cities, selectedCity }) {\n  return (\n    <div style={{display: \"flex\"}}>\n      <div style={{flex:\"1\"}}>\n\n      <h2>Liste des villes</h2>\n\n      {cities.map(city => (\n        <div key={city.id}>\n          <p>{city.name}</p>\n          {selectedCity && selectedCity.id === city.id && (\n            <CityDetails city={city} />\n          )}\n        </div>\n      ))}\n    </div>\n    </div>\n  );\n}\n\nexport default CityList;\n\n\n/*function CityList({ cities }) {\n    return (\n      <div>\n        <h2>Liste des villes</h2>\n        <ul>\n          {cities && cities.map(city => (\n            <li key={city.id}>{city.name}</li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n  \n  export default CityList;\n  */\nvar _c;\n$RefreshReg$(_c, \"CityList\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","CityList","cities","selectedCity","_s","hoveredCity","setHoveredCity","calculateDistance","city","clickedX","x","clickedY","y","cityX","cityY","distance","Math","sqrt","pow","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onMouseEnter","onMouseLeave","name","id","population","region","_c","$RefreshReg$"],"sources":["/home/kenneth/Bureau/carte-projet/src/components/CityList.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction CityList({ cities, selectedCity }) {\n  const [hoveredCity, setHoveredCity] = useState(null);\n\n  const calculateDistance = (city) => {\n   // Implémentez ici la formule de calcul de la distance entre la ville et le point cliqué\n    \n// Coordonnées du point cliqué\nconst clickedX = city.x;; // Remplacez ... par la coordonnée x du point cliqué\nconst clickedY = city.y; // Remplacez ... par la coordonnée y du point cliqué\n\n// Coordonnées de la ville\nconst cityX = city.x;\nconst cityY = city.y;\n\n// Calcul de la distance euclidienne\nconst distance = Math.sqrt(Math.pow(clickedX - cityX, 2) + Math.pow(clickedY - cityY, 2));\n\n   return  distance ;\n  };\n\n  return (\n    <div>\n      <h2>Liste des villes</h2>\n      <ul>\n        {cities.map(city => (\n          <li key={city.id}\n              onMouseEnter={() => setHoveredCity(city)}\n              onMouseLeave={() => setHoveredCity(null)}\n          >\n            {city.name} - {calculateDistance(city)} km\n          </li>\n        ))}\n      </ul>\n      {hoveredCity && (\n        <div>\n          <h3>Détails de la ville survolée :</h3>\n          <p>Nom : {hoveredCity.name}</p>\n          <p>Distance : {hoveredCity.distance}</p>\n          <p>population : {hoveredCity.population}</p>\n          <p>region: {hoveredCity.region}</p>\n          {/* Afficher d'autres détails de la ville survolée ici */}\n        </div>\n      )}\n      {selectedCity && (\n        <div>\n          <h3>Détails de la ville sélectionnée :</h3>\n          <p>Nom : {selectedCity.name}</p>\n          {/* Afficher d'autres détails de la ville sélectionnée ici */}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default CityList;\n\n\n/*\nimport React from \"react\";\nimport CityDetails from \"./CityDetails\";\n\nfunction CityList({ cities, selectedCity }) {\n\n  return (\n\n    <div style={{ display: \"flex\" }}>\n\n      <div style={{ flex: \"1\" }}>\n\n        <h2>Liste des villes</h2>\n\n        <ul>\n\n          {cities.map(city => (\n\n            <li\n\n              key={city.id}\n\n              style={{\n\n                cursor: \"pointer\",\n\n                fontWeight: selectedCity && selectedCity.id === city.id ? \"bold\" : \"normal\"\n\n              }}\n\n              onClick={() => selectedCity(city)}\n\n            >\n\n              {city.name}\n\n            </li>\n\n          ))}\n\n        </ul>\n\n      </div>\n\n      <div style={{ flex: \"2\", position: \"relative\" }}>\n\n        <h2>Carte des villes</h2>\n\n        <div style={{ position: \"absolute\", left: \"0\", top: \"0\" }}>\n\n          {cities.map(city => (\n\n            <div\n\n              key={city.id}\n\n              style={{\n\n                position: \"absolute\",\n\n                left: city.x,\n\n                top: city.y,\n\n                width: \"10px\",\n\n                height: \"10px\",\n\n                backgroundColor: \"red\",\n\n                borderRadius: \"50%\"\n\n              }}\n\n            />\n\n          ))}\n\n        </div>\n\n      </div>\n\n    </div>\n\n  );\n\n}\n\nexport default CityList;*/\n\n\n/*function CityList({ cities, selectedCity }) {\n  return (\n    <div style={{display: \"flex\"}}>\n      <div style={{flex:\"1\"}}>\n\n      <h2>Liste des villes</h2>\n\n      {cities.map(city => (\n        <div key={city.id}>\n          <p>{city.name}</p>\n          {selectedCity && selectedCity.id === city.id && (\n            <CityDetails city={city} />\n          )}\n        </div>\n      ))}\n    </div>\n    </div>\n  );\n}\n\nexport default CityList;\n\n\n/*function CityList({ cities }) {\n    return (\n      <div>\n        <h2>Liste des villes</h2>\n        <ul>\n          {cities && cities.map(city => (\n            <li key={city.id}>{city.name}</li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n  \n  export default CityList;\n  */"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}