{"ast":null,"code":"var _jsxFileName = \"/home/kenneth/Bureau/carte-projet/src/components/Map.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Map({\n  carte,\n  fetchData,\n  setSelectedCity\n}) {\n  _s();\n  const [hoveredCity, setHoveredCity] = useState(null);\n  const handleMapClick = event => {\n    const rect = event.target.getBoundingClientRect();\n    const x = event.clientX - rect.left;\n    const y = event.clientY - rect.top;\n    fetchData(x, y);\n  };\n  const handleMouseOver = async event => {\n    const rect = event.target.getBoundingClientRect();\n    const x = event.clientX - rect.left;\n    const y = event.clientY - rect.top;\n    try {\n      const response = await fetch(`http://localhost:8080/citys?x=${x}&y=${y}`);\n      const cityData = await response.json();\n      setHoveredCity(cityData.name); // Suppose que votre réponse contient le nom de la ville\n    } catch (error) {\n      console.error('Erreur lors de la récupération des données de la ville:', error);\n    }\n  };\n  const handleMouseOut = () => {\n    setHoveredCity(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: \"relative\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: carte,\n      alt: \"Carte de France\",\n      style: {\n        width: \"50%\",\n        height: \"auto\",\n        float: \"left\"\n      },\n      onClick: handleMapClick,\n      onMouseOver: handleMouseOver,\n      onMouseOut: handleMouseOut\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), hoveredCity && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: hoveredCity\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(Map, \"J6cWgCd0mYOsB13sdkGHgRrftcw=\");\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Map","carte","fetchData","setSelectedCity","_s","hoveredCity","setHoveredCity","handleMapClick","event","rect","target","getBoundingClientRect","x","clientX","left","y","clientY","top","handleMouseOver","response","fetch","cityData","json","name","error","console","handleMouseOut","style","position","children","src","alt","width","height","float","onClick","onMouseOver","onMouseOut","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/kenneth/Bureau/carte-projet/src/components/Map.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction Map({ carte, fetchData, setSelectedCity }) {\n  const [hoveredCity, setHoveredCity] = useState(null);\n\n  const handleMapClick = (event) => {\n    const rect = event.target.getBoundingClientRect();\n    const x = event.clientX - rect.left;\n    const y = event.clientY - rect.top;\n    fetchData(x, y);\n  };\n\n  const handleMouseOver = async (event) => {\n    const rect = event.target.getBoundingClientRect();\n    const x = event.clientX - rect.left;\n    const y = event.clientY - rect.top;\n\n    try {\n      const response = await fetch(`http://localhost:8080/citys?x=${x}&y=${y}`);\n      const cityData = await response.json();\n      setHoveredCity(cityData.name); // Suppose que votre réponse contient le nom de la ville\n    } catch (error) {\n      console.error('Erreur lors de la récupération des données de la ville:', error);\n    }\n  };\n\n  const handleMouseOut = () => {\n    setHoveredCity(null);\n  };\n\n  return (\n    <div style={{ position: \"relative\" }}>\n      <img \n        src={carte} \n        alt=\"Carte de France\" \n        style={{ width: \"50%\", height: \"auto\", float:\"left\" }} \n        onClick={handleMapClick} \n        onMouseOver={handleMouseOver}\n        onMouseOut={handleMouseOut}\n      />\n      {hoveredCity && <p>{hoveredCity}</p>}\n    </div>\n  );\n}\n\nexport default Map;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,GAAGA,CAAC;EAAEC,KAAK;EAAEC,SAAS;EAAEC;AAAgB,CAAC,EAAE;EAAAC,EAAA;EAClD,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAEpD,MAAMU,cAAc,GAAIC,KAAK,IAAK;IAChC,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAACC,qBAAqB,CAAC,CAAC;IACjD,MAAMC,CAAC,GAAGJ,KAAK,CAACK,OAAO,GAAGJ,IAAI,CAACK,IAAI;IACnC,MAAMC,CAAC,GAAGP,KAAK,CAACQ,OAAO,GAAGP,IAAI,CAACQ,GAAG;IAClCf,SAAS,CAACU,CAAC,EAAEG,CAAC,CAAC;EACjB,CAAC;EAED,MAAMG,eAAe,GAAG,MAAOV,KAAK,IAAK;IACvC,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAACC,qBAAqB,CAAC,CAAC;IACjD,MAAMC,CAAC,GAAGJ,KAAK,CAACK,OAAO,GAAGJ,IAAI,CAACK,IAAI;IACnC,MAAMC,CAAC,GAAGP,KAAK,CAACQ,OAAO,GAAGP,IAAI,CAACQ,GAAG;IAElC,IAAI;MACF,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAE,iCAAgCR,CAAE,MAAKG,CAAE,EAAC,CAAC;MACzE,MAAMM,QAAQ,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MACtChB,cAAc,CAACe,QAAQ,CAACE,IAAI,CAAC,CAAC,CAAC;IACjC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,yDAAyD,EAAEA,KAAK,CAAC;IACjF;EACF,CAAC;EAED,MAAME,cAAc,GAAGA,CAAA,KAAM;IAC3BpB,cAAc,CAAC,IAAI,CAAC;EACtB,CAAC;EAED,oBACEP,OAAA;IAAK4B,KAAK,EAAE;MAAEC,QAAQ,EAAE;IAAW,CAAE;IAAAC,QAAA,gBACnC9B,OAAA;MACE+B,GAAG,EAAE7B,KAAM;MACX8B,GAAG,EAAC,iBAAiB;MACrBJ,KAAK,EAAE;QAAEK,KAAK,EAAE,KAAK;QAAEC,MAAM,EAAE,MAAM;QAAEC,KAAK,EAAC;MAAO,CAAE;MACtDC,OAAO,EAAE5B,cAAe;MACxB6B,WAAW,EAAElB,eAAgB;MAC7BmB,UAAU,EAAEX;IAAe;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CAAC,EACDpC,WAAW,iBAAIN,OAAA;MAAA8B,QAAA,EAAIxB;IAAW;MAAAiC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjC,CAAC;AAEV;AAACrC,EAAA,CAzCQJ,GAAG;AAAA0C,EAAA,GAAH1C,GAAG;AA2CZ,eAAeA,GAAG;AAAC,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}