{"ast":null,"code":"/*import React, { useState } from 'react';\n\nfunction Map({ carte, fetchData, setSelectedCity }) {\n  const handleMapClick = (event) => {\n    const rect = event.target.getBoundingClientRect();\n    const x = event.clientX - rect.left;\n    const y = event.clientY - rect.top;\n    fetchData(x, y);\n  };\n\n  const [hoveredCity, setHoveredCity] = useState(null);\n\n  const handleMouseOver = (cityName) => {\n    setHoveredCity(cityName);\n  };\n\n  const handleMouseOut = () => {\n    setHoveredCity(null);\n  };\n\n  return (\n    <div style={{ position: \"relative\" }}>\n      <img \n        src={carte} \n        alt=\"Carte de France\" \n        style={{ width: \"50%\", height: \"auto\", float:\"left\" }} \n        onClick={handleMapClick} \n        onMouseOver={() => handleMouseOver(\"Paris\")}\n        onMouseOut={handleMouseOut}\n      />\n      {hoveredCity && <p>{hoveredCity}</p>}\n    </div>\n  );\n}\n\nexport default Map;*/","map":{"version":3,"names":[],"sources":["/home/kenneth/Bureau/carte-projet/src/components/Map.js"],"sourcesContent":["/*import React, { useState } from 'react';\n\nfunction Map({ carte, fetchData, setSelectedCity }) {\n  const handleMapClick = (event) => {\n    const rect = event.target.getBoundingClientRect();\n    const x = event.clientX - rect.left;\n    const y = event.clientY - rect.top;\n    fetchData(x, y);\n  };\n\n  const [hoveredCity, setHoveredCity] = useState(null);\n\n  const handleMouseOver = (cityName) => {\n    setHoveredCity(cityName);\n  };\n\n  const handleMouseOut = () => {\n    setHoveredCity(null);\n  };\n\n  return (\n    <div style={{ position: \"relative\" }}>\n      <img \n        src={carte} \n        alt=\"Carte de France\" \n        style={{ width: \"50%\", height: \"auto\", float:\"left\" }} \n        onClick={handleMapClick} \n        onMouseOver={() => handleMouseOver(\"Paris\")}\n        onMouseOut={handleMouseOut}\n      />\n      {hoveredCity && <p>{hoveredCity}</p>}\n    </div>\n  );\n}\n\nexport default Map;*/\n\n\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}